================================
The ``2-matrix_divided`` module
================================

Using ``matrix_divided``
------------------------
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix = [
... [1, 2, 3],
... [4, 5, 6]
... ]
>>> print(matrix)
[[1, 2, 3], [4, 5, 6]]
>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6]
... ]
>>> matrix = [
...     "i'm not a list here",
...     [4, 5, 6, 10]
... ] 


Testing Divided without any error
    >>> matrix_divided([[1, 2, 3],[4, 5, 6]], 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Testing Div is 0
    >>> matrix_divided([[1, 2, 3],[4, 5, 6]], 0)
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero

Testing Div is not a number
    >>> matrix_divided([[1, 2, 3],[4, 5, 6]], "0")
    Traceback (most recent call last):
    ...
    TypeError: div must be a number

Testing matrix not list
    >>> matrix_divided(3, 5)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Testing matrix as a just list
    >>> matrix_divided([1, 2, 3], 3)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Testing empty matrix
    >>> matrix_divided([[],[]], 3)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats


