The ``2-matrix_divided`` module
======================

Using ``matrix_divided``
-------------------

imports the ``matrix_divided`` from the ``2-matrix_divided`` module:

	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Normal Runs:

       >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
       [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]


       >>> matrix_divided([[1, 2], [3, 4]], 0.5)
       [[2.0, 4.0], [6.0, 8.0]]


       >>> matrix_divided([[-1, -2], [-3, -4]], 0.5)
       [[-2.0, -4.0], [-6.0, -8.0]]


Handle's if div is 0:

	 >>> matrix_divided([[1,2], [3, 4]], 0)
	 Traceback (most recent call last):
	 ...
	 ZeroDivisionError: division by zero


Handle's matrix count
	 >>> matrix_divided([[1], [1, 2]], 1)
	 Traceback (most recent call last):
	 ...
	 TypeError: Each row of the matrix must have the same size


Handle's matrix type
	 >>> matrix_divided([['a', 2], [3, 4]], 1)
	 Traceback (most recent call last):
	 ...
	 TypeError: matrix must be a matrix (list of lists) of integers/floats

	 >>> matrix_divided([], 1)
	 Traceback (most recent call last):
	 ...
	 TypeError: matrix must be a matrix (list of lists) of integers/floats

	 >>> matrix_divided([None], 1)
	 Traceback (most recent call last):
	 ...
	 TypeError: matrix must be a matrix (list of lists) of integers/floats

	 >>> matrix_divided([[]], 1)
	 Traceback (most recent call last):
	 ...
	 TypeError: matrix must be a matrix (list of lists) of integers/floats

	 >>> matrix_divided([[None]], 1)
	 Traceback (most recent call last):
	 ...
	 TypeError: matrix must be a matrix (list of lists) of integers/floats

	 >>> matrix_divided('a', 1)
	 Traceback (most recent call last):
	 ...
	 TypeError: matrix must be a matrix (list of lists) of integers/floats

	 >>> matrix_divided([[1,2], (3,4)], 1)
	 Traceback (most recent call last):
	 ...
	 TypeError: matrix must be a matrix (list of lists) of integers/floats

Handle's div if the div is not a number
	 >>> matrix_divided([[1,2], [3, 4]], 'a')
	 Traceback (most recent call last):
	 ...
	 TypeError: div must be a number

	 >>> matrix_divided([[1,2], [3, 4]], None)
	 Traceback (most recent call last):
	 ...
	 TypeError: div must be a number

	 >>> matrix_divided([[1, 2], [3, 4]])
	 Traceback (most recent call last):
	 ...
	 TypeError: matrix_divided() missing 1 required positional argument: 'div'

	 >>> matrix_divided()
	 Traceback (most recent call last):
	 ...
	 TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

	 >>> matrix_divided([[1, 2], [3, 4]], float('inf'))
	 [[0.0, 0.0], [0.0, 0.0]]
